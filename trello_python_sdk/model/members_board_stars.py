# coding: utf-8

"""
    Trello

    This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>

    The version of the OpenAPI document: 1.0
    Created by: https://trello.com/home
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from trello_python_sdk import schemas  # noqa: F401


class MembersBoardStars(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            idBoard = schemas.StrSchema
            pos = schemas.StrSchema
            __annotations__ = {
                "idBoard": idBoard,
                "pos": pos,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["idBoard"]) -> MetaOapg.properties.idBoard: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pos"]) -> MetaOapg.properties.pos: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["idBoard", "pos", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["idBoard"]) -> typing.Union[MetaOapg.properties.idBoard, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pos"]) -> typing.Union[MetaOapg.properties.pos, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["idBoard", "pos", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        idBoard: typing.Union[MetaOapg.properties.idBoard, str, schemas.Unset] = schemas.unset,
        pos: typing.Union[MetaOapg.properties.pos, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'MembersBoardStars':
        return super().__new__(
            cls,
            *args,
            idBoard=idBoard,
            pos=pos,
            _configuration=_configuration,
            **kwargs,
        )
